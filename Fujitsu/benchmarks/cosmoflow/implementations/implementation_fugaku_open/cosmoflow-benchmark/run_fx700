#!/bin/bash

#set -ex

LANG=

echo "`date +%s.%N` #script start at `date`"

if [ $# -lt 1 ] ; then
        cat << EOF >&2
        usage: $0 numNodes timeLimit
        When numNodes is larger than 0 (zero), the job is executed using mpiexec.
Otherwise, the job is executed directlry.
Each node has 4 processes and uses 4 GPUs.
The timeLimit is the maximum of execution time with the format hh:mm:ss.
EOF
    exit 1
fi

. $HOME/COSMOFLOW/setenv

export COSMOFLOW_DIR="$PWD"
# The directory where data is stored
DataDir="/share/COSMOFLOW_v1.1.0/data"
ConfigYaml="cosmo_mini.yaml"

Exec(){
    echo "$@"
    "$@"
}

### The number of total processes
#number of processes per node

NumNodes="$1" && shift
dnnlverbose="$1" && shift

MyName=`basename "$0"`
Time=`date "+%y%m%d%H%M%S"`
HostName=`hostname | awk -F . '{ print $1; }'`
JobName="$MyName.$Time.$HostName."`printf "%06x" $$`

RecursiveMkDir(){
    local Dir="$1"
    local Parent=`dirname "$Dir"`
    if [ ! -d "$Parent" ] ; then
        RecursiveMkDir "$Parent" || return
    fi
    mkdir "$Dir" || return
    chgrp "$GroupID" "$Dir"
    chmod g+s "$Dir"
    return
}

LogDir="${PWD}/log"/`printf "%04d" $NumNodes`/"$JobName"
RecursiveMkDir "$LogDir" || exit

ParameterFile="$LogDir/parameters"
cp "$PWD/parameters" "$ParameterFile"

cp $PWD/configs/$ConfigYaml ${LogDir}

git rev-parse HEAD 2>&1 > "$LogDir/git_hash"

NumHosts=`expr "$NumNodes" + 0`
if [ $NumHosts -lt 1 ] ; then
    NumHosts=1
fi

### Copy bind script to log directory
Bind="${COSMOFLOW_DIR}/ompi_bind.sh"
cp ${Bind} ${LogDir}/

ii="host"
### Create hostfile
#sed -e 's/$/ slots=4/' ${Hostfile:-$SGE_JOB_HOSTLIST} > "$LogDir/hostfile"
cp hostfile $LogDir/
cp "$LogDir/parameters" "$LogDir/parameters_$ii"
sed -i -e 's|$LOGDIR|'"$LogDir|" "$LogDir/parameters_$ii"
sed -i -e 's|$DataDir|'"$DataDir|" "$LogDir/parameters_$ii"
sed -i -e 's|$LocalDataDir|'"$LocalDataDir|" "$LogDir/parameters_$ii"
sed -i -e 's|_SEED_|'"$RANDOM|" "$LogDir/parameters_$ii"
sed -i -e 's|$ConfigYaml|'"$LogDir/$ConfigYaml|" "$LogDir/parameters_$ii"
sed -i -e 's|$TrainStagingDupFactor|'"$TrainStagingDupFactor|" "$LogDir/parameters_$ii"
. "$LogDir/parameters_$ii"

### Train 
# PARAMS[@] are defined in the file "parameters".
echo "`date +%s.%N` #mpirun"
#Exec mpirun -n ${NumNodes} --mca btl openib -mca pml ob1 \
#	--report-bindings \
Exec mpirun -n ${NumNodes} \
	--prefix /opt/FJSVstclanga/v1.0.0 \
    -mca mpi_warn_on_fork 0 \
    --hostfile ${LogDir}/hostfile \
    -x ParameterFile="$LogDir/parameters_$ii" \
    -x LOGDIR=${LogDir} \
    -x dnnlverbose=${dnnlverbose} \
    ${Bind} | tee "$LogDir/result_$ii.txt"

echo "`date +%s.%N` #finished at `date`"

# End of file
